{"version":3,"sources":["components/Cell.js","components/Board.js","lib/constants.js","lib/GameState.js","lib/Game.js","components/LocalBoard.js","components/PageLocalGame.js","util/copy.js","lib/minimax.js","components/AiBoard.js","components/PageAiGame.js","components/ErrorMessage.js","components/PageHome.js","components/OnlineBoard.js","components/PageOnlineGame.js","components/ParticlesContainer.js","App.js","serviceWorker.js","index.js"],"names":["Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","height","width","ctx","refs","canvas","getContext","drawSquare","cell","drawCircle","drawCross","newProps","strokeRect","lineWidth","beginPath","moveTo","lineTo","stroke","arc","Math","PI","_this2","react_default","a","createElement","i","j","ref","React","Component","Board","state","onCellClick","bind","assertThisInitialized","onUpdateView","rows","board","map","row","cols","col","key","style","marginLeft","marginRight","Cell_Cell","textAlign","getMessage","className","constants","P1_WON","P2_WON","TIE","GAME_ON","GameState","currentPlayer","moves","_generateBoard","maxMoves","gameComplete","c","push","Game","_state","player","_updateModel","isComplete","_checkComplete","won","_getCoinsCountInDir","connect","r","dir","count","changeCol","changeRow","LocalBoard","game","getState","newState","doMove","setState","objectSpread","console","log","PageLocalGame","LocalBoard_LocalBoard","copy","o","output","v","Array","isArray","getEmptyCells","cells","minimax","depth","maxDepth","score","evaluate","toMaximize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","newGame","currentScore","err","return","findBestMove","arguments","length","bestScore","bestMove","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","x","y","move","setTimeout","PageAiGame","AiBoard_LocalBoard","ErrorMessage","msg","PageHome","onSelectChange","event","select","target","onStartLocal","history","onStartAi","onCreateGame","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","room","abrupt","fetch","concat","sent","json","response","error","stop","onJoinGame","_callee2","_context2","onP1change","p1","onP2change","p2","onRoomChange","onAiChange","ai","options","formLocal","formAi","formOnline","type","onChange","form","ErrorMessage_ErrorMessage","withRouter","OnlineBoard","socket","socketIOClient","whoami","emit","id","on","PageOnlineGame","showBoard","create","join","OnlineBoard_OnlineBoard","show","ParticlesContainer","particles_default","params","options1","particles","number","density","enable","value_area","color","shape","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","App","position","top","left","react_router_dom","components_ParticlesContainer","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a81b7f2.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Cell extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onClick = props.onClick;\n        this.height = 100;\n        this.width = this.height;\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        this.drawSquare(ctx)\n        switch(this.props.cell) {\n            case 0:break;\n            case 1:\n                this.drawCircle(ctx)\n                break;\n            case 2:\n                this.drawCross(ctx)\n                break;\n            default:break;\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        switch(newProps.cell) {\n            case 0:break;\n            case 1:\n                this.drawCircle(ctx)\n                break;\n            case 2:\n                this.drawCross(ctx)\n                break;\n            default:break;\n        }\n    }\n\n    drawSquare(ctx) {\n        ctx.strokeRect(0,0,this.height,this.width)\n    }\n\n    drawCross(ctx) {\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.stroke();\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(this.width, 0);\n        ctx.lineTo(0, this.height);\n        ctx.stroke();\n    }\n\n    drawCircle(ctx) {\n        ctx.beginPath();\n        ctx.arc(this.height/2, this.height/2, this.height/3, 0, 2 * Math.PI);\n        ctx.stroke();\n    }\n\n    render() {\n        return(\n            <div onClick = {()=>{this.onClick(this.props.i, this.props.j)}}>\n                <canvas ref=\"canvas\" width={this.width} height={this.height} />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Cell from './Cell';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n        this.onCellClick = this.onCellClick.bind(this);\n        this.onUpdateView = this.onUpdateView.bind(this);\n    }\n\n    onCellClick(i,j) {}\n    onUpdateView(state) {}\n    getMessage() {}\n\n    render() {\n        let rows = this.state.board == null?[]: this.state.board.map((row, i)=>{\n            let cols = row.map((col, j)=>\n                <div key={j} style = {{marginLeft:\"5px\", marginRight:\"5px\"}}>\n                        <Cell cell = {col} i = {i} j = {j} onClick = {this.onCellClick}></Cell>\n                </div>\n            )\n            return (\n                <div key={i}>\n                    {cols}\n                </div>\n            )\n        })\n        \n        return (\n            <div>\n                <h3 style={{textAlign:\"center\"}}>Tic Tac Toe</h3>\n                <h3 style={{textAlign:\"center\"}}>{this.getMessage()}</h3>\n                <div className=\"row\">   \n                    <div className=\"col-md-5 col-sm-5\"></div>\n                    {rows}\n                </div>\n            </div>);\n    }\n}\n\n/*\nimport React from 'react';\nimport Cell from './Cell';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport socketIOClient from \"socket.io-client\";\n\nconst constants = {\n    P1_WON : 1,\n    P2_WON : 2,\n    TIE : 3,\n    GAME_ON : 0\n}\n\nexport default class Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onCellClick = this.onCellClick.bind(this);\n        this.socket = socketIOClient('http://localhost:4300');\n        this.socket.on(\"connect\", ()=>{\n            console.log(\"connected\")\n            this.socket.emit(\"test\")\n        })\n        this.socket.on('updateView',(state)=>{\n            this.setState({...state}, () => {\n                if(this.state.currentPlayer === 2) {\n                    const move = findBestMove(this.state);\n                    this.socket.emit('move', {i:move[0],j:move[1], player: this.state.currentPlayer})\n                }\n            })\n        })\n    }\n\n    onCellClick(i,j) {\n        if(this.state.currentPlayer === 2)\n            return;\n        this.socket.emit('move', {i,j, player: this.state.currentPlayer})\n    }\n\n    render() {\n        let rows = this.state == null?[]: this.state.board.map((row, i)=>{\n            let cols = row.map((col, j)=>\n                <div key={j} style = {{marginLeft:\"5px\", marginRight:\"5px\"}}>\n                        <Cell cell = {col} i = {i} j = {j} onClick = {this.onCellClick}></Cell>\n                </div>\n            )\n            return (\n                <div key={i}>\n                    {cols}\n                </div>\n            )\n        })\n        let message;\n        if(this.state == null) {\n            message = \"loading\"\n        } else if(this.state.gameComplete === constants.GAME_ON) {\n            message = this.state.currentPlayer === 1?\"Player 'O's turn\": \"Playe 'X's turn\"\n        } else if(this.state.gameComplete === constants.TIE) {\n            message = \"Its a Tie\"\n            this.socket.disconnect();\n        } else {\n            message = \"Player \" + this.state.gameComplete === 1? \"O\":\"X\" + \" won\"\n            this.socket.disconnect();\n        }\n        return (\n            <div>\n                <h3 style={{textAlign:\"center\"}}>Tic Tac Toe</h3>\n                <h3 style={{textAlign:\"center\"}}>{message}</h3>\n                <div className=\"row\">   \n                    <div className=\"col-md-5 col-sm-5\"></div>\n                    {rows}\n                </div>\n            </div>);\n    }\n}\n*/\n","const constants = {\n      P1_WON : 1,\n      P2_WON : 2,\n      TIE : 3,\n      GAME_ON : 0\n}\n\nexport default constants;\n","import constants from './constants'\n\nexport default class GameState {\n    constructor() {\n        this.currentPlayer = 1;\n        this.moves = 0;\n        this.rows = 3;\n        this.cols = 3;\n        this.board = this._generateBoard();\n        this.maxMoves = this.rows * this.cols;\n        this.gameComplete = constants.GAME_ON;\n    }\n    \n    _generateBoard() {\n        var rows = [];\n        for(var row = 0; row < this.rows; row++) {\n            var c = [];\n            for(var col = 0; col < this.cols; col++) {\n                c.push(0);\n                //rows.push(0);\n            }\n            rows.push(c);\n        }\n        return rows;\n    }\n}","import constants from './constants'\nimport GameState from './GameState'\nexport default class Game {\n\n    constructor(state) {\n        if(state) {\n            this._state = state;\n        } else {\n            this._state = new GameState();   \n        }\n    }\n\n    getState() {\n        return this._state;\n    }\n    \n    doMove(i,j,player) {\n        if(this._state.gameComplete)       \n            return null;             \n        if(this._state.currentPlayer != player)    \n            return null;\n        if(this._state.board[i][j] != 0)\n            return null;\n        this._updateModel(i,j,player);\n        return this._state;\n    }\n    \n    _updateModel(i,j,player) {\n        this._state.board[i][j] = player;\n        var isComplete = this._checkComplete(i,j,player);\n        this._state.gameComplete = isComplete; \n        this._state.moves++;\n        this._state.currentPlayer = this._state.moves%2 + 1;\n    }\n    \n    _checkComplete(row,col,player) {\n        let connect  = 3;\n        const won = player === 1? constants.P1_WON:constants.P2_WON;\n        if(this._getCoinsCountInDir(row,col,1)+ this._getCoinsCountInDir(row,col,5)>= connect-1){\n            return won;\n        }  \n        else if(this._getCoinsCountInDir(row,col,2)+ this._getCoinsCountInDir(row,col,6)>= connect-1){\n            return won ;\n        }\n        else if(this._getCoinsCountInDir(row,col,3)+ this._getCoinsCountInDir(row,col,7)>= connect-1){\n            return won ;\n        }  \n        else if(this._getCoinsCountInDir(row,col,4)+ this._getCoinsCountInDir(row,col,8)>= connect-1){\n            return won ;\n        }  \n        else if(this._state.moves >= this._state.maxMoves-1){\n            return constants.TIE;\n        }\n        else\n        return constants.GAME_ON ;        \n    } \n    \n    _getCoinsCountInDir(r  , c  , dir )  {\n        let player  = this._state.board[r][c];\n        let count  = 0;\n        dir -= 1;\n        let dirRow = [-1,-1,-1,0,1,1,1,0];\n        let dirCol = [-1,0,1,1,1,0,-1,-1];\n        let changeCol  = dirCol[dir];\n        let changeRow  = dirRow[dir];\n\n        r += changeRow ;\n        c += changeCol ; \n\n        while(r>=0&&r<this._state.rows&&c>=0&&c<this._state.cols){\n        if(player == this._state.board[r][c]){\n                count++;\n                r += changeRow ;\n                c += changeCol ; \n            }\n            else{\n                break ;\n            }\n        }\n        return count;\n    }\n\n}\n\n\n","import Board from './Board';\nimport Game from'../lib/Game';\nimport constants from '../lib/constants'\n\nexport default class LocalBoard extends Board {\n    constructor(props) {\n        super(props);\n        this.game = new Game();\n        this.state = this.game.getState();\n    }\n\n    onCellClick(i,j) {\n        const newState = this.game.doMove(i,j,this.game._state.currentPlayer);\n        this.onUpdateView(newState);\n    }\n\n    onUpdateView(state) {\n        this.setState({...state});\n    }\n\n    getMessage() {\n        let message;\n        console.log(this.state);\n        if(this.state == null) {\n            message = \"loading\"\n        } else if(this.state.gameComplete === constants.GAME_ON) {\n            message = this.state.currentPlayer === 1?\"Player 'O's turn\": \"Playe 'X's turn\"\n        } else if(this.state.gameComplete === constants.TIE) {\n            message = \"Its a Tie\"\n        } else {\n            message = \"Player \" + (this.state.gameComplete === constants.P1_WON ? \"O\":\"X\") + \" won\"\n        }\n        return message;\n    }\n}","import React from 'react';\nimport LocalBoard from './LocalBoard';\n\nexport default class PageLocalGame extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <LocalBoard></LocalBoard>\n            </div>\n        )\n    }\n}","export default function copy(o) {\n    var output, v, key;\n    output = Array.isArray(o) ? [] : {};\n    for (key in o) {\n        v = o[key];\n        output[key] = (typeof v === \"object\") ? copy(v) : v;\n    }\n    return output;\n }","import constants from './constants'\nimport Game from './Game'\nimport copy from '../util/copy'\n\nconst WIN_SCORE = 10;\nconst LOSE_SCORE = -10;\nconst TIE_SCORE = 0;\n\nconst getEmptyCells = (state) => {\n    const cells = [];\n    for(let i=0; i<state.rows;i++) {\n        for(let j=0; j<state.cols;j++) {\n            if(state.board[i][j] === 0)\n                cells.push([i,j])\n        }\n    }\n    return cells;\n}\n\nconst evaluate = (state, player) => {\n    let score = 0;\n    switch(state.gameComplete) {\n        case constants.P1_WON:\n            if(player === 1) {\n                score = WIN_SCORE\n            } else {\n                score = LOSE_SCORE\n            }\n            break;\n        case constants.P2_WON:\n            if(player === 2) {\n                score = WIN_SCORE\n            } else {\n                score = LOSE_SCORE\n            }\n            break;\n        case constants.TIE:\n            score = TIE_SCORE;\n            break;\n        default:\n            score = TIE_SCORE;\n    }\n    return score;\n}\n\nconst minimax = (game, depth, player, maxDepth) => {\n\n    if(depth === maxDepth) {\n        return 0;\n    }\n    //console.log(\"player = \"+player)\n\tlet score = evaluate(game._state, player);\n    if(score === WIN_SCORE || score === LOSE_SCORE || game._state.gameComplete === constants.TIE) {\n        //console.log(depth)\n        return score;\n    }\n    const cells = getEmptyCells(game._state);\n    const toMaximize = game._state.currentPlayer == player;\n\n    if(toMaximize) {\n        score = -1000;\n    } else {\n        score = 1000;\n    }\n\n    for (const cell of cells) {\n\t\tconst x = cell[0];\n        const y = cell[1];\n        const newGame = new Game(copy(game._state));\n        newGame.doMove(cell[0], cell[1], newGame._state.currentPlayer);\n\t\tconst currentScore = minimax(newGame, depth+1, player, maxDepth);\n\n\t\tif (toMaximize) {\n\t\t\tif (currentScore > score)\n\t\t\t\tscore = currentScore;\n\t\t}\n\t\telse {\n\t\t\tif (currentScore < score)\n                score = currentScore;\n\t\t}\n\t}\n\treturn score;\n}\n\nconst findBestMove = (state, maxDepth = 100) => {\n    const cells = getEmptyCells(state);\n    let bestScore = -1000, bestMove = [-1, -1];\n    const player = state.currentPlayer\n    for (const cell of cells) {\n        const x = cell[0];\n        const y = cell[1];\n        const newGame = new Game(copy(state));\n        newGame.doMove(x, y, newGame._state.currentPlayer);\n        const score = minimax(newGame,0, player, maxDepth)   \n        if(score > bestScore) {\n            bestScore = score;\n            bestMove = cell;\n        } \n    }\n    return bestMove;\n}\n\nexport default findBestMove;\n","import Board from './Board';\nimport Game from'../lib/Game';\nimport constants from '../lib/constants'\nimport findBestMove from '../lib/minimax';\n\nexport default class LocalBoard extends Board {\n    constructor(props) {\n        super(props);\n        this.game = new Game();\n        this.state = this.game.getState();\n    }\n\n    onCellClick(i,j) {\n        if(this.state.currentPlayer === 2) \n            return;\n        const newState = this.game.doMove(i,j,this.game._state.currentPlayer);\n        this.onUpdateView(newState);\n    }\n\n    onUpdateView(state) {\n        this.setState({...state}, () => {\n            if(this.state.currentPlayer === 2) {\n                const move = findBestMove(this.state);\n                const newState = this.game.doMove(move[0],move[1],this.state.currentPlayer);\n                setTimeout(() => {this.onUpdateView(newState);}, 100);\n            }\n        });\n    }\n\n    getMessage() {\n        let message;\n        if(this.state == null) {\n            message = \"loading\"\n        } else if(this.state.gameComplete === constants.GAME_ON) {\n            message = this.state.currentPlayer === 1?\"Player 'O's turn\": \"Playe 'X's turn\"\n        } else if(this.state.gameComplete === constants.TIE) {\n            message = \"Its a Tie\"\n        } else {\n            message = \"Player \" + (this.state.gameComplete === constants.P1_WON ? \"O\":\"X\") + \" won\"\n        }\n        return message;\n    }\n}","import React from 'react';\nimport AiBoard from './AiBoard';\n\nexport default class PageAiGame extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <AiBoard></AiBoard>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class ErrorMessage extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return this.props.msg==null||this.props.msg===''?null:(\n            <div className=\"alert alert-danger\">\n                <strong>Error!</strong> {this.props.msg}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ErrorMessage from './ErrorMessage';\n\nclass PageHome extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.options = ['local', 'ai', 'online']\n        this.state = {\n            select: this.options[0],\n            p1 :'',\n            p2 :'',\n            room : '',\n            ai:'0',\n            error:''\n        }\n    }\n\n    onSelectChange = (event) => {\n        this.setState({select: event.target.value})\n    }\n\n    onStartLocal = () => {\n        this.props.history.push(`/app/local`);//?p1=${this.state.p1}&p2=${this.state.p2}`)\n    }\n\n    onStartAi = () => {\n        this.props.history.push(`/app/ai`);//?p1=${this.state.p1}&ai=${this.state.ai}`)\n    }\n\n    onCreateGame = async () => {\n        if(this.state.room == null || this.state.room == '') {\n            return\n        }\n        const res = await fetch(`/api/canCreate/${this.state.room}`)\n        const json = await res.json()\n        if(json.response) \n            return this.props.history.push(`/app/online?room=${this.state.room}&created=1`);\n        this.setState({error:'cannot create room, room already exist'})\n    }\n\n    onJoinGame = async () => {\n        if(this.state.room == null || this.state.room == '') {\n            return\n        }\n        const res = await fetch(`/api/canJoin/${this.state.room}`)\n        const json = await res.json()\n        if(json.response) \n            return this.props.history.push(`/app/online?room=${this.state.room}&created=0`);\n        this.setState({error:'cannot join room, room is not available'})\n    }\n\n    onP1change = (event) => {\n        this.setState({p1:event.target.value})\n    }\n\n    onP2change = (event) => {\n        this.setState({p2:event.target.value})\n    }\n\n    onRoomChange = (event) => {\n        this.setState({room:event.target.value})\n    }\n\n    onAiChange = (event) => {\n        console.log(event)\n        this.setState({ai:event.target.value})\n    }\n\n    render() {\n        const formLocal = (\n            <div>\n              {/*  <div className=\"form-group\">\n                    <label>Player 1:</label>\n                    <input type=\"text\"  className=\"form-control\" value={this.state.p1} onChange={this.onP1change}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Player 2:</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.p2} onChange={this.onP2change}/>\n        </div> */}\n                <button className=\"btn btn-primary\" onClick={this.onStartLocal}>Start game</button>\n            </div>\n        )\n\n        const formAi = (\n            <div>{/*\n                <div className=\"form-group\">\n                    <label>Your name:</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.p1} onChange={this.onP1change}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Level:</label>\n                    <select key=\"ai\" className=\"form-control\" value={this.state.ai} onChange={this.onAiChange} >\n                        <option value=\"0\">Dumb</option>\n                        <option value=\"1\">Easy</option>\n                        <option value=\"2\">Medium</option>\n                        <option value=\"3\">Hard</option>\n                    </select>\n            </div>*/}\n                <button className=\"btn btn-primary\" onClick={this.onStartAi}>Start game</button>\n            </div>\n        )\n\n        const formOnline = (\n            <div>\n                <div className=\"form-group\">\n                    <label>Room id:</label>\n                    <input type=\"number\" className=\"form-control\" value={this.state.room} onChange={this.onRoomChange}/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary\" onClick={this.onCreateGame}>Create Game</button>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button className=\"btn btn-primary\" onClick={this.onJoinGame}>Join Game</button>\n                    </div>\n                </div>\n            </div>\n        )\n\n        const form = (\n            <div className=\"form-horizontal\">\n                <div className=\"form-group\">\n                    <label>Select Option:</label>\n                    <select className=\"form-control\" onChange={this.onSelectChange} value={this.state.select}>\n                        <option value={this.options[0]}>Play Locally</option>\n                        <option value={this.options[1]}>Play againts Computer</option>\n                        {/*<option value={this.options[2]}>Play againts Friend Online</option>*/}\n                    </select>\n                </div>\n                {this.state.select=== this.options[0]?formLocal:null}\n                {this.state.select=== this.options[1]?formAi:null}\n                {this.state.select=== this.options[2]?formOnline:null}\n\n            </div>\n        )\n        \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 style={{textAlign:\"center\"}}>TIC TAC TOE</h1>\n                    </div>  \n                </div>  \n                <ErrorMessage msg={this.state.error}></ErrorMessage>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        {form}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PageHome);","import Board from './Board';\nimport constants from '../lib/constants'\nimport socketIOClient from \"socket.io-client\";\n\nexport default class OnlineBoard extends Board {\n    constructor(props) {\n        super(props);\n        this.socket = socketIOClient('/');\n        if(this.props.whoami === 1) {\n            this.socket.emit('create', this.props.id);\n        } else {\n            this.socket.emit('join', this.props.id);\n        }\n        this.socket.on('updateView', this.onUpdateView)\n    }\n\n    onCellClick(i,j) {\n        if(this.props.whoami === this.state.currentPlayer) {\n            this.socket.emit('move', {i,j});\n        }\n    }\n\n    onUpdateView(state) {\n        this.setState({...state});\n    }\n\n    getMessage() {\n        let message;\n        if(this.state.board == null) {\n            message = \"loading\"\n        } else if(this.state.gameComplete === constants.GAME_ON) {\n            message = this.state.currentPlayer === 1?\"Player 'O's turn\": \"Playe 'X's turn\"\n        } else if(this.state.gameComplete === constants.TIE) {\n            message = \"Its a Tie\"\n        } else {\n            message = \"Player \" + (this.state.gameComplete == constants.P1_WON ? \"O\":\"X\") + \" won\"\n        }\n        return message;\n    }\n}","import React from 'react';\nimport OnlineBoard from './OnlineBoard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class PageOnlineGame extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showBoard : false,\n            whoami : null,\n            id : ''\n        };\n        this.onChange = this.onChange.bind(this);\n        this.create = this.create.bind(this);\n        this.join = this.join.bind(this);\n    }\n\n    onChange(event) {\n        this.setState({id : event.target.value})\n    }\n\n    create() {\n        this.setState({whoami:1, showBoard: true})\n    }\n\n    join() {\n        this.setState({whoami:2, showBoard: true})\n    }\n\n    render() {\n        const form = (\n            <div>\n                <input type = \"number\" onChange = {this.onChange}></input>\n                <button onClick = {this.create}>create</button>\n                <button onClick = {this.join}>join</button>\n            </div>\n        );\n        \n        const board = <OnlineBoard whoami = {this.state.whoami} id = {this.state.id} show = {this.state.showBoard}></OnlineBoard>\n\n        return (\n            <div>\n                {this.state.showBoard? board:form}\n            </div>\n        )\n    }\n}   ","import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\n\n\nclass ParticlesContainer extends Component {\nrender() {\n    return ( \n        <Particles params={options1} className = \"particles\"/>\n    )\n}\n}\n\nexport default ParticlesContainer;\n\nvar options1 = {\n    particles: {\n        \"number\": {\n            \"value\": 150    ,\n            \"density\": {\n                \"enable\": true,\n                \"value_area\": 1803.4120608655228\n            }\n        },\n        \"color\": {\n            \"value\": \"#ff0000\"\n        },\n        \"shape\": {\n            \"type\": \"circle\",\n            \"stroke\": {\n                \"width\": 1,\n                \"color\": \"black\"\n            },\n            \"polygon\": {\n                \"nb_sides\": 4\n            }\n        },\n        \"opacity\": {\n            \"value\": 0.3,\n            \"random\": false,\n            \"anim\": {\n                \"enable\": false,\n                \"speed\": 1,\n                \"opacity_min\": 0.3,\n                \"sync\": false\n            }\n        },\n        \"size\": {\n            \"value\": 5,\n            \"random\": true,\n            \"anim\": {\n                \"enable\": false,\n                \"speed\": 40,\n                \"size_min\": 1,\n                \"sync\": false\n            }\n        },\n        \"line_linked\": {\n            \"enable\": true,\n            \"distance\": 0,\n            \"color\": \"#ffffff\",\n            \"opacity\": 0.3687847739990702,\n            \"width\": 0.6413648243462091\n        },\n        \"move\": {\n            \"enable\": true,\n            \"speed\": 6,\n            \"direction\": \"none\",\n            \"random\": false,\n            \"straight\": false,\n            \"out_mode\": \"out\",\n            \"bounce\": false,\n            \"attract\": {\n                \"enable\": false,\n                \"rotateX\": 600,\n                \"rotateY\": 1200\n            }\n        }\n    },\n    interactivity: {\n        \"detect_on\": \"window\",\n        \"events\": {\n            \"onhover\": {\n                \"enable\": true,\n                \"mode\": \"repulse\"\n            },\n            \"onclick\": {\n                \"enable\": false,\n                \"mode\": \"bubble\"\n            },\n            \"resize\": true\n        },\n        \"modes\": {\n            \"grab\": {\n                \"distance\": 400,\n                \"line_linked\": {\n                    \"opacity\": 1\n                }\n            },\n            \"bubble\": {\n                \"distance\": 400,\n                \"size\": 40,\n                \"duration\": 2,\n                \"opacity\": 8,\n                \"speed\": 3\n            },\n            \"repulse\": {\n                \"distance\": 100,\n                \"duration\": 0.4\n            },\n            \"push\": {\n                \"particles_nb\": 4\n            },\n            \"remove\": {\n                \"particles_nb\": 2\n            }\n        }\n    },\n    retina_detect: true\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport PageLocalGame from './components/PageLocalGame';\nimport PageAiGame from './components/PageAiGame';\nimport PageHome from './components/PageHome';\nimport PageOnlineGame from './components/PageOnlineGame';\nimport ParticlesContainer from './components/ParticlesContainer';\n\nfunction App() {\n  const style = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  }\n  return (\n    <div className=\"App\">\n      <Router>\n        <div style={style}>\n          <ParticlesContainer/>\n          <div style={style}>\n            <Route exact path = \"/app\" component = {PageHome}></Route>\n            <Route path = \"/app/local/\" component = {PageLocalGame}></Route>\n            <Route path = \"/app/ai/\" component = {PageAiGame}></Route>\n            <Route path = \"/app/online/\" component = {PageOnlineGame}></Route>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}